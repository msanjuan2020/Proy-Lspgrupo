@page "/tasklist"
@using Lpsgrupo.UI.Frontend.Services
@using Lspgrupo.Cross.Entities.Common
@using Lspgrupo.Cross.Entities.Task
@using static System.Net.WebRequestMethods
@inject HttpClient Http
@inject ApiService ApiService

<h3>Lista de tareas</h3>


<div class=" container">
    <div class="row">

        <table class="table table-responsive-md">
            <thead class=" tab-pane">
                <tr>
                    <th>Titulo</th>
                    <th>Descripcion</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @if (true)
                {
                    @foreach (var item in taskItems)
                    {
                        <tr>
                            <td>@item.Title</td>
                            <td>@item.Description</td>

                            @if (item.IsCompleted)
                            {
                                <td> Activo </td>

                            }else{
                                <td> Inactivo </td>
                            }
                        </tr>
                    }
                }else
                {
                    <tr>
                        <td colspan="3">No hay tareas disponibles.</td>
                    </tr>
                }

            </tbody>

        </table>

    </div>
</div>

@code {

    private List<TaskItemDto> taskItems = new List<TaskItemDto>();

    protected async override Task OnInitializedAsync()
    {
        var response = await ApiService.GetAsync<GenericResponse<List<TaskItemDto>>>($"api/Task/get-all");

        if (response.IsSuccess)
        {
            taskItems = response.Data ?? new List<TaskItemDto>();
        }
    }

}
